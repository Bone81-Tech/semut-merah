### Fase 1: Fondasi - Manajemen Pengguna

1.  **Persiapan Database (Google Sheet):**
    *   Membuat sheet baru bernama `Pengguna` dengan kolom: `id_pengguna`, `nama`, `email`, `password`.

2.  **Pengembangan Backend (Code.gs):**
    *   Membuat fungsi `registerUser` untuk menambahkan pengguna baru ke sheet `Pengguna`.
    *   Membuat fungsi `loginUser` untuk memvalidasi kredensial pengguna dari sheet `Pengguna`.

3.  **Integrasi Frontend (script.js):**
    *   Menghubungkan form registrasi untuk memanggil fungsi `registerUser`.
    *   Menghubungkan form login untuk memanggil fungsi `loginUser`.
    *   Menyimpan status login pengguna di frontend (misalnya di `localStorage`).
    *   Memperbarui UI (menampilkan nama pengguna dan tombol logout) setelah berhasil login.

---

### Fase 2: Fitur Inti - Favorit & Keranjang Belanja

4.  **Persiapan Database (Google Sheet):**
    *   Membuat sheet baru bernama `Favorit` dengan kolom: `id_favorit`, `id_pengguna`, `id_produk`.
    *   Membuat sheet baru bernama `Keranjang` dengan kolom: `id_keranjang`, `id_pengguna`, `id_produk`, `jumlah`.

5.  **Pengembangan Backend (Code.gs):**
    *   Membuat fungsi untuk mengelola **Favorit** (`getFavorites`, `addFavorite`, `removeFavorite`).
    *   Membuat fungsi untuk mengelola **Keranjang** (`getCart`, `addToCart`, `updateCartItem`, `removeCartItem`).

6.  **Integrasi Frontend (script.js):**
    *   Menghubungkan tombol "hati" (favorit) untuk memanggil fungsi `addFavorite` dan `removeFavorite`.
    *   Mengganti logika keranjang belanja yang saat ini menggunakan `localStorage` dengan fungsi-fungsi backend yang baru.
    *   Saat pengguna login, frontend akan memanggil `getFavorites` dan `getCart` untuk menampilkan data yang sesuai.

---

### Fase 3: Fitur Utama - Proses Pemesanan (Checkout)

7.  **Persiapan Database (Google Sheet):**
    *   Membuat sheet `Pesanan` dengan kolom: `id_pesanan`, `id_pengguna`, `tanggal`, `total_harga`, `status`, `nama_pemesan`, `alamat_pengiriman`, `telepon`.
    *   Membuat sheet `DetailPesanan` dengan kolom: `id_detail`, `id_pesanan`, `id_produk`, `jumlah`, `harga_saat_pesan`.

8.  **Pengembangan Backend (Code.gs):**
    *   Membuat fungsi `createOrder` yang akan:
        *   Menyimpan data ke sheet `Pesanan`.
        *   Memindahkan item dari `Keranjang` ke `DetailPesanan`.
        *   Mengosongkan `Keranjang` pengguna setelah checkout berhasil.
    *   Membuat fungsi `getOrderHistory` untuk mengambil riwayat pesanan pengguna.
    *   Membuat fungsi `getOrderDetail` untuk mengambil detail spesifik pesanan (termasuk untuk tracking).

9.  **Integrasi Frontend (script.js):**
    *   Menghubungkan form checkout untuk memanggil fungsi `createOrder`.
    *   Menampilkan data di bagian "Riwayat Pesanan" dan "Pelacakan Pesanan" di profil pengguna dengan memanggil fungsi backend yang relevan.

---

### Fase 4: Finalisasi & Penyempurnaan

10. **Pembersihan & Optimasi:**
    *   Merampingkan kode, memastikan tidak ada data statis lagi.
    *   Menambahkan penanganan *error* yang lebih baik (misalnya, jika API gagal dipanggil).
    *   Menambahkan indikator *loading* di frontend untuk memberikan umpan balik visual kepada pengguna saat menunggu data dari backend.

11. **Pengujian Menyeluruh:**
    *   Melakukan tes untuk semua fitur dari awal (registrasi) hingga akhir (melihat riwayat pesanan) untuk memastikan semua alur bekerja dengan lancar.
